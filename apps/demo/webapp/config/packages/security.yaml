security:
    password_hashers:
        SocialApp\Security\UserStore\Domain\Model\User:
            algorithm: auto
    providers:
        user_provider:
            id: SocialApp\Security\UserLogin\Infrastructure\Security\UserProvider
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        main:
            lazy: true
            provider: user_provider
            custom_authenticator: SocialApp\Security\UserLogin\Infrastructure\Security\LoginFormAuthenticator
            logout:
                path: security_logout
                # target: app_any_route
            remember_me:
                secret: '%kernel.secret%'
                lifetime: 604800 # 1 week in seconds
                path: /

    access_control:
        - { path: '^/login', roles: PUBLIC_ACCESS, methods: [ GET ] }
        - { path: '^/', roles: IS_AUTHENTICATED_REMEMBERED }

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
