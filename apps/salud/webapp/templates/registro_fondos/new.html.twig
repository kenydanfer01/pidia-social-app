{% extends 'base.html.twig' %}
{% import '@App/theme1/breadcrumb.html.twig' as breadcrumb %}

{% set _title = 'Registro Fondos' %}
{% set _main_title = 'Nuevo' %}
{% set _section =  'registro_fondos_index' %}

{% block _breadcrumb %}
    {{ breadcrumb.show2(_title,_section,'Nuevo') }}
{% endblock %}

{% block _main %}
    {{ include('registro_fondos/_form.html.twig') }}
{% endblock %}

{% block _body_tools %}
    {% include 'crud/_new_links_ico.html.twig' with {'route_base':'registro_fondos'} %}
{% endblock %}

{% block _main_footer %}
    {% include 'crud/_new_links.html.twig' with {'route_base':'registro_fondos'} %}
{% endblock %}

{% block stylesheets %}
{% endblock %}

{% block javascripts %}
    <script src="{{ asset('js/select2.js') }}"></script>
    <script src="{{ asset('js/flatpickr.js') }}"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            Flatpickr();
            Select2();
        })

        let dniTxt = document.getElementById('registro_fondos_dni');
        let nombresTxt = document.getElementById('registro_fondos_nombreSocio');
        let baseSocialTxt = document.getElementById('registro_fondos_baseSocial');
        let tipoSocioTxt = document.getElementById('registro_fondos_tipoSocio');

        nombresTxt.readOnly = true;
        baseSocialTxt.readOnly = true;
        tipoSocioTxt.readOnly = true;

        let nameSelected = '';
        let baseSocial = '';
        let tipoBeneficiario = '';

        let tipoSocioMapping = {
            "S": "Socio",
            "F": "Familiar",
            "T": "Trabajador",
            "O": "Otro",
        };

        function getPersonDni(query) {
            return fetch('{{ path('buscar_paciente_dni') }}', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    dni: query,
                })
            }).then(response => response.json());
        }

        function getSocioSisproApi(query) {
            return fetch(`https://solcafe.sisprocoffee.com/api/v2/socios/${query}`)
                .then(response => response.json());
        }

        function clearInputs() {
            dniTxt.value = '';
            nombresTxt.value = '';
            baseSocialTxt.value = '';
            tipoSocioTxt.value = '';
        }

        function compareResults(query) {
            // Realizar ambas consultas fetch en paralelo
            let nameSispro = null;
            let nameReniec = null;
            Promise.all([getPersonDni(query), getSocioSisproApi(query)])
                .then(([data1, data2]) => {
                        console.log(data1);
                        console.log(data2);
                        if (data1.data === null && data2.socio === null) {
                            Swal.fire('El DNI no se encuentra ni en SISPRO ni en RENIEC');
                        }
                        if (data1.data !== null) {
                            nameReniec = data1.data.nombreCompleto
                            nameSelected = nameReniec;
                        }
                        if (data2.socio !== null) {
                            nameSispro = data2.socio.nombre;
                            nameSelected = nameSispro;
                            baseSocial = data2.socio.baseSocial;
                            tipoBeneficiario = data2.socio.tipo;
                        }
                        if (data2.socio === null && data1.data !== null) {
                            Swal.fire({
                                title: 'La persona: ' + nameSelected + ', no está registrada en SISPRO',
                                text: '¿Desea registrar a la persona de forma independiente?',
                                showDenyButton: true,
                                confirmButtonText: 'REGISTRAR',
                                denyButtonText: `CANCELAR`,
                            }).then((result) => {
                                if (result.isConfirmed) {
                                    Swal.fire('Podrá editar los campos Manualmente', '', 'success')
                                    nombresTxt.readOnly = false;
                                    baseSocialTxt.readOnly = false;
                                    tipoSocioTxt.readOnly = false;
                                } else if (result.isDenied) {
                                    Swal.fire('INGRESE UN DNI VÁLIDO')
                                    clearInputs();
                                }
                            })
                        }
                        if (nameReniec !== null && nameSispro !== null) {
                            if (nameReniec === nameSispro) {
                                nameSelected = nameReniec;
                            }
                            if (nameReniec !== nameSispro) {
                                console.log('El usuario debe elegir')
                                Swal.fire({
                                    title: 'Se han contrado diferencias entre los Datos de RENIEC con el registro de SISPRO. Por favor, Elija una opción',
                                    icon: 'question',
                                    showCancelButton: true,
                                    confirmButtonText: 'RENIEC: ' + nameReniec,
                                    cancelButtonText: 'SISPRO: ' + nameSispro,
                                }).then((result) => {
                                    if (result.isConfirmed) {
                                        nameSelected = nameReniec;
                                    } else if (result.dismiss) {
                                        nameSelected = nameSispro;
                                    }
                                    Swal.fire('Seleccionaste: ' + nameSelected);
                                    nombresTxt.value = nameSelected;
                                });
                            }
                        }
                        tipoSocioTxt.value = tipoSocioMapping[tipoBeneficiario] || '';
                        baseSocialTxt.value = baseSocial;
                        nombresTxt.value = nameSelected;
                    }
                )
                .catch(error => {
                    console.error("Error al obtener datos:", error);
                });
        }

        // Realiza la busqueda luego de haber escrito 8 dígitos en el DNI
        dniTxt.onkeyup = function () {
            if (this.value.length !== 8) {
                return;
            }
            compareResults(this.value);
        }
    </script>
{% endblock %}
